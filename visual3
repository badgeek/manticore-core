(define visual3
    (class object%
        (super-new)
        
        (field (vertex0 0))
        (field (vis_gain 1))
        (field (vis_blur 0))
        
        (define/public (initialize)
            
            (gain vis_gain)    
            (blur vis_blur)
            
            (osc-send "/gaincontrol/x" "f" (list (/ vis_gain 10)))  ; send a message to this destination

            (set! vertex0 (build-nurbs-sphere 20 80))

            (with-primitive vertex0
                (scale (vector 2 2 2))
                (pdata-add "ori" "v")
                (pdata-copy "p" "ori")
            )
    
            )
        
        (define/public (update)
            (gain vis_grain)
            (blur vis_blur)
            )    
        
        (define/public (setgain value)
            (set! vis_gain value)
            (gain vis_gain)           
            )
        
        (define/public (setblur value)
            (set! vis_blur value)  
                      
            )
        
        (define/public (draw)

            (cond ((eqv? vertex0 0)
            (initialize))
            )

                                (with-primitive vertex0
                  (hint-none)
            (line-width 3)
                  (hint-wire)
                  (backfacecull 1)
                  (opacity (* (gh 5) 1000))
                  ;(wire-line 1)
                  (wire-opacity (* (gh 3) 100))
                 (wire-colour (vector 1 1 1))
                  ;(wire-colour (vector (gh 3) 0 (gh 2)))
                  (colour (vector 1 0 0))
                  ;(colour (vector (gh 3) (gh 5) (gh 6)))
                  (rotate (vector 0 (* (delta) 100) 0))
              ;    (scale (vector (gh 2) (gh 3) (gh 4)))
                  (pdata-index-map!
                       (lambda (index val)
                            (vadd (vmul (pdata-ref "ori" index) 1) (vmul (pdata-ref "n" index) (* (gh index) 20)))
                       )
                    "p"
                  )

                )
        )
        
        (define/public (kill)
            
            (destroy vertex0)
            (set! vertex0 0)
    
            )
        
        (initialize)
        )
    )
