(define (kill_visuals)
    (define i 0)                         
    (do ()                               
        [(= i visuals_count)]            
        (send (list-ref visuals i) kill) 
        (set! i (+ i 1)))                
    )

(define (render_draw x)
    (send (list-ref visuals x) draw)
)

(define (render_init x)
    (send (list-ref visuals x) initialize)
)

(define (render_update x)
    (send (list-ref visuals x) update)
)

(define (render_setgain x y)
    (send (list-ref visuals x) setgain y)
)

(define (render_setblur x y)
    (send (list-ref visuals x) setblur y)
)

(define (osc_bank_set)
    (define i 0)                     
    (when (osc-msg "/visual_bank")
           (kill_visuals)
           (do ()                           
           [(= i visuals_count)]                    
           (cond ((not (zero? (osc i)))
           (set! visual_bank i)))
           (set! i (+ i 1)))              
        )
)

(define (osc_fader_set)
       (define x 0)
       (do ()
       [(= x fader_count)]        
       (when (osc-msg (string-append "/Fader/" (number->string x)))
       ;(display (string-append "fader set: " (number->string (osc 0)) "id:" (number->string x)))
       (vector-set! fader_control x (osc 0))
       )
       (set! x (+ x 1))))

(define (receive_osc)

        (cond ((eqv? debug 1)
           (display (osc-peek))(newline) 
        ))
        
        (osc_bank_set)
        (osc_fader_set) 
        (when (osc-msg "/gaincontrol/x")
        (render_setgain visual_bank (* 10 (osc 0)))
        )
    )

(define (select_visual)
	(render_draw visual_bank)
)