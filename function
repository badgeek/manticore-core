(define (kill_visuals)
    (define i 0)                         
    (do ()                               
        [(= i visuals_count)]            
        (send (list-ref visuals i) kill) 
        (set! i (+ i 1)))                
    )

(define (visual_draw idx)
    (send (list-ref visuals idx) draw)
)

(define (visual_init idx)
    (send (list-ref visuals idx) initialize)
)

(define (visual_update idx)
    (send (list-ref visuals idx) update)
)

(define (visual_setgain idx x)
    (send (list-ref visuals idx) setgain x)
)

(define (visual_setblur idx x)
    (send (list-ref visuals idx) setblur x)
)

(define (visual_setfader idx x y)
    (send (list-ref visuals idx) setfader x y)
)

(define (visual_getfadercount idx)
    (values (send (list-ref visuals idx) getfadercount))
)


(define (osc_bank_set)
    (define i 0)                     
    (when (osc-msg "/visual_bank")
           (kill_visuals)
           (do ()                           
           [(= i visuals_count)]                    
           (cond ((not (zero? (osc i)))
           (set! visual_bank i)))
           (set! i (+ i 1)))              
        )
)

(define (osc_fader_set)
       (define x 0)
       (do ()
        [(= x (visual_getfadercount visual_bank) )]        
          (when (osc-msg (string-append "/Fader/" (number->string x)))
          (visual_setfader visual_bank x (osc 0))
          )
          (set! x (+ x 1))
        )
       )

(define (receive_osc)

        (cond ((eqv? debug 1)
           (display (osc-peek))
           (newline) 
        ))
        
        (osc_bank_set)
        (osc_fader_set) 
        (when (osc-msg "/gaincontrol/x")
        (visual_setgain visual_bank (* 10 (osc 0)))
        )
        (when (osc-msg "/blurcontrol/x")
        (visual_setblur visual_bank (osc 0))
        )
    )

(define (select_visual)
	(visual_draw visual_bank)
)