(define (try theList)
  (cond ((null? theList) '0)
        ((list? (car theList)) (+ (try (car theList)) (try
          (cdr theList))))
        (else (+ '1 (try(cdr theList))))
))


(define (kill_visuals)
    (define i 0)                      ; i := 0
    (do ()                            ; do 
        [(= i (try visuals))]                       ;   until i=5
        (send (list-ref visuals i) kill);       display i
        (set! i (+ i 1)))               ;       i := i +1
    )


;(send visual1 initialize)
;(send visual1 update)
;(send visual1 draw)
;(send visual1 setgain 1)
;(send visual1 setblur 0)


(define (render_draw x)
    (send (list-ref visuals x) draw)
)

(define (render_init x)
    (send (list-ref visuals x) initialize)
)

(define (render_update x)
    (send (list-ref visuals x) update)
)

(define (render_setgain x y)
    (send (list-ref visuals x) setgain y)
)

(define (render_setblur x y)
    (send (list-ref visuals x) setblur y)
)

(define (receive_osc)
    (when (osc-msg "/visual_bank")
    	(kill_visuals)
        (cond ((not (zero? (osc 0)))
                (display "btn 0 pressed")
                (set! visual_bank 0)
                )
            ((not (zero? (osc 1)))
                (display "btn 1 pressed")
                (set! visual_bank 1)
                )
                ;(display visual_bank))
            ((not (zero? (osc 2)))
                ;(display "btn 2 pressed")
                (set! visual_bank 2)
                )
            ((not (zero? (osc 3)))
                ;(display "btn 3 pressed")
                (set! visual_bank 3)
                )
            ((not (zero? (osc 4)))
                ;(display "btn 4 pressed")
                (set! visual_bank 4)
                )
            ((not (zero? (osc 5)))
                ;(display "btn 5 pressed")
                (set! visual_bank 5)
                )
            ((not (zero? (osc 6)))
                ;(display "btn 6 pressed")
                (set! visual_bank 6)
                )
            ((not (zero? (osc 7)))
                ;(display "btn 7 pressed")
                (set! visual_bank 7)
                )
            )
        )
        (when (osc-msg "/Fader/x")
        	(display "fader")
            (set! fader0 (osc 0))
        )

        (when (osc-msg "/Fader2/x")
            (set! fader1 (osc 0))
        )

        (when (osc-msg "/Fader3/x")
            (set! fader2 (osc 0))
        )

        (when (osc-msg "/Fader4/x")
            (set! fader3 (osc 0))
        )

        (when (osc-msg "/off")
        	(display (osc 0))
            (set! visual_off (osc 0))
        )

        (when (osc-msg "/gaincontrol/x")
        	;(display (osc 0))

            (render_setgain visual_bank (* 10 (osc 0)))
            
        )

    )

(define (select_visual)
	(render_draw visual_bank)
)